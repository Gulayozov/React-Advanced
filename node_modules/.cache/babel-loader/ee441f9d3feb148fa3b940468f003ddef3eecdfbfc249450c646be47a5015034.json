{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\navras.gulayozov\\\\Downloads\\\\login_page-main\\\\src\\\\components\\\\FetchPosts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FetchPosts() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\").then(response => response.json()).then(data => {\n      setPosts(data);\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error fetching posts:\", error);\n      setLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Fetch and Display Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner-border text-primary\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: posts.slice(0, 10).map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card p-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(FetchPosts, \"RbKeE0iIFzYv1PT2nn3dHnXn06o=\");\n_c = FetchPosts;\nexport default FetchPosts;\nvar _c;\n$RefreshReg$(_c, \"FetchPosts\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FetchPosts","_s","posts","setPosts","loading","setLoading","fetch","then","response","json","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","slice","map","post","title","id","_c","$RefreshReg$"],"sources":["C:/Users/navras.gulayozov/Downloads/login_page-main/src/components/FetchPosts.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction FetchPosts() {\n    const [posts, setPosts] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        fetch(\"https://jsonplaceholder.typicode.com/posts\")\n            .then((response) => response.json())\n            .then((data) => {\n                setPosts(data);\n                setLoading(false);\n            })\n            .catch((error) => {\n                console.error(\"Error fetching posts:\", error);\n                setLoading(false);\n            });\n    }, []);\n\n    return (\n        <div className=\"container mt-5\">\n            <h2>Fetch and Display Posts</h2>\n            {loading ? (\n                <div className=\"d-flex justify-content-center mt-5\">\n                    <div className=\"spinner-border text-primary\" role=\"status\">\n                        <span className=\"visually-hidden\">Loading...</span>\n                    </div>\n                </div>\n            ) : (\n                <div>\n                    {posts.slice(0, 10).map((post) => (\n                        <div key={post.id} className=\"card p-3\">\n                            <h5>{post.title}</h5>\n                        </div>\n                    ))}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default FetchPosts;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZS,KAAK,CAAC,4CAA4C,CAAC,CAC9CC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACZP,QAAQ,CAACO,IAAI,CAAC;MACdL,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,CACDM,KAAK,CAAEC,KAAK,IAAK;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CP,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIN,OAAA;IAAKe,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BhB,OAAA;MAAAgB,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC/Bf,OAAO,gBACJL,OAAA;MAAKe,SAAS,EAAC,oCAAoC;MAAAC,QAAA,eAC/ChB,OAAA;QAAKe,SAAS,EAAC,6BAA6B;QAACM,IAAI,EAAC,QAAQ;QAAAL,QAAA,eACtDhB,OAAA;UAAMe,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,gBAENpB,OAAA;MAAAgB,QAAA,EACKb,KAAK,CAACmB,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAACC,GAAG,CAAEC,IAAI,iBACzBxB,OAAA;QAAmBe,SAAS,EAAC,UAAU;QAAAC,QAAA,eACnChB,OAAA;UAAAgB,QAAA,EAAKQ,IAAI,CAACC;QAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC,GADfI,IAAI,CAACE,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAAClB,EAAA,CArCQD,UAAU;AAAA0B,EAAA,GAAV1B,UAAU;AAuCnB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}