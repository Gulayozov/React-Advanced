{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\navras.gulayozov\\\\Downloads\\\\login_page-main\\\\src\\\\components\\\\UserCache.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserCache() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [cache, setCache] = useState({});\n  const fetchUsers = () => {\n    // Check cache before making an API call\n    if (cache[\"users\"]) {\n      setUsers(cache[\"users\"]);\n      console.log(\"Loaded from cache\");\n    } else {\n      fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => response.json()).then(data => {\n        setUsers(data);\n        setCache({\n          ...cache,\n          users: data\n        });\n        console.log(\"Fetched from API\");\n      }).catch(error => console.error(\"Error fetching users:\", error));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cached User Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary mb-3\",\n      onClick: fetchUsers,\n      children: \"Fetch Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [user.name, \" - \", user.email]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(UserCache, \"bg88cayFMeYDs0K+GJAcjFJ7cGw=\");\n_c = UserCache;\nexport default UserCache;\nvar _c;\n$RefreshReg$(_c, \"UserCache\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UserCache","_s","users","setUsers","cache","setCache","fetchUsers","console","log","fetch","then","response","json","data","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","user","name","email","id","_c","$RefreshReg$"],"sources":["C:/Users/navras.gulayozov/Downloads/login_page-main/src/components/UserCache.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction UserCache() {\n    const [users, setUsers] = useState([]);\n    const [cache, setCache] = useState({});\n\n    const fetchUsers = () => {\n        // Check cache before making an API call\n        if (cache[\"users\"]) {\n            setUsers(cache[\"users\"]);\n            console.log(\"Loaded from cache\");\n        } else {\n            fetch(\"https://jsonplaceholder.typicode.com/users\")\n                .then((response) => response.json())\n                .then((data) => {\n                    setUsers(data);\n                    setCache({ ...cache, users: data });\n                    console.log(\"Fetched from API\");\n                })\n                .catch((error) => console.error(\"Error fetching users:\", error));\n        }\n    };\n\n    return (\n        <div className=\"container mt-5\">\n            <h2>Cached User Data</h2>\n            <button className=\"btn btn-primary mb-3\" onClick={fetchUsers}>\n                Fetch Users\n            </button>\n            <ul className=\"list-group\">\n                {users.map((user) => (\n                    <li key={user.id} className=\"list-group-item\">\n                        {user.name} - {user.email}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default UserCache;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtC,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACrB;IACA,IAAIF,KAAK,CAAC,OAAO,CAAC,EAAE;MAChBD,QAAQ,CAACC,KAAK,CAAC,OAAO,CAAC,CAAC;MACxBG,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IACpC,CAAC,MAAM;MACHC,KAAK,CAAC,4CAA4C,CAAC,CAC9CC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;QACZV,QAAQ,CAACU,IAAI,CAAC;QACdR,QAAQ,CAAC;UAAE,GAAGD,KAAK;UAAEF,KAAK,EAAEW;QAAK,CAAC,CAAC;QACnCN,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MACnC,CAAC,CAAC,CACDM,KAAK,CAAEC,KAAK,IAAKR,OAAO,CAACQ,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;IACxE;EACJ,CAAC;EAED,oBACIhB,OAAA;IAAKiB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BlB,OAAA;MAAAkB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBtB,OAAA;MAAQiB,SAAS,EAAC,sBAAsB;MAACM,OAAO,EAAEhB,UAAW;MAAAW,QAAA,EAAC;IAE9D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTtB,OAAA;MAAIiB,SAAS,EAAC,YAAY;MAAAC,QAAA,EACrBf,KAAK,CAACqB,GAAG,CAAEC,IAAI,iBACZzB,OAAA;QAAkBiB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,GACxCO,IAAI,CAACC,IAAI,EAAC,KAAG,EAACD,IAAI,CAACE,KAAK;MAAA,GADpBF,IAAI,CAACG,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAACpB,EAAA,CApCQD,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AAsClB,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}